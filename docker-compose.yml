version: '3'
services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    networks:
      - internal
    volumes:
     - ./nginx/image-files/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - mysql
      - api
      - frontend
      - backend
      - memcached
    ports:
      - 80:80
      - 443:443

  api:
    container_name: api
    build:
      context: ./api
    depends_on:
      - mysql
    networks:
      - internal
    env_file:
      - .env
    # volumes:
    #   - ./api:/srv

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile.dev       # For development
      # dockerfile: ./Dockerfile       # For production
      # target: production-stage
    depends_on:
      - api
    networks:
      - internal
    # volumes:
    #   - ./backend/image-files/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    #   - ./backend/src:/app/src

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev       # For development
      # dockerfile: ./Dockerfile       # For production
      # target: production-stage
    depends_on:
      - api
    networks:
      - internal
    # volumes:
    #   - ./frontend/image-files/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    #   - ./frontend/src:/app/src

  memcached:
    container_name: memcached
    image: memcached:latest
    networks:
      - internal

  mysql:
    container_name: mysql
    image: mysql:5.6
    restart: always
    networks:
      - internal
    env_file:
      - .env
    ports:
      - 3308:3306
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
      # - ./mysql/sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql

networks:
  internal:
    driver: bridge

volumes:
  mysql_data:
